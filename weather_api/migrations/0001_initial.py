# Generated by Django 4.2.1 on 2023-05-15 10:45

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suburb', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=3)),
                ('postcode', models.CharField(max_length=4)),
                ('country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.CharField(choices=[('Cool', 'Cool'), ('Mild', 'Mild'), ('Warm', 'Warm'), ('Hot', 'Hot'), ('Freezing', 'Freezing')], max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default=None, max_length=100, null=True)),
                ('completed_tutorial', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WeatherOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weather_option', models.CharField(choices=[('Sunny', 'Sunny'), ('Rainy', 'Rainy'), ('Cloudy', 'Cloudy'), ('Stormy', 'Stormy')], max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Wind',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wind', models.CharField(choices=[('No Wind', 'No Wind'), ('Calm', 'Calm'), ('Windy', 'Windy'), ('Gusty', 'Gusty')], max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather_api.temperature')),
                ('weather_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather_api.weatheroption')),
                ('wind', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather_api.wind')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('Upcoming', 'Upcoming'), ('Completed', 'Completed')], default='Upcoming', max_length=100)),
                ('result', models.BooleanField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather_api.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather_api.user')),
                ('weather', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather_api.weather')),
            ],
        ),
        migrations.CreateModel(
            name='ActualWeather',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weather_api.location')),
            ],
        ),
        migrations.AddConstraint(
            model_name='actualweather',
            constraint=models.UniqueConstraint(fields=('datetime', 'location'), name='actualweather_unique_datetime_location'),
        ),
    ]
